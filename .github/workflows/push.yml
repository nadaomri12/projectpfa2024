name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build_and_deploy_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Build and push frontend Docker image
        uses: azure/docker-login@v1
        with:
          login-server: sitepfa.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Build frontend Docker image
        run: docker build -t sitepfa.azurecr.io/frontend:${{ github.sha }} ./front
        
      - name: Push frontend Docker image to Azure Container Registry
        run: docker push sitepfa.azurecr.io/frontend:${{ github.sha }}

      
  
  build_and_deploy_backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Build and push backend Docker image
        uses: azure/docker-login@v1
        with:
          login-server: sitepfa.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      
      - name: Build backend Docker image
        run: docker build -t sitepfa.azurecr.io/backend:${{ github.sha }} ./backend
      
      - name: Push backend Docker image to Azure Container Registry
        run: docker push sitepfa.azurecr.io/backend:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.GHA_DEPLOY_SSH_PRIVATE_KEY }}
          
      - name: Disable Host key verification
        # Hack to prevent "Host key verification failed". Should be replaced with a ssh-keyscan based solution
        run: echo "StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Deploy
        run: docker-compose up -d
        env:
          COMPOSE_DOCKER_CLI_BUILD: 0
          DOCKER_HOST: "ssh://git@machinepfa"